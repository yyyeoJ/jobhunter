import { inject, before, toFile, when, append } from '@featherscloud/pinion';
const importTemplate = ({ upperName, folder, fileName }) => /* ts */ `import { ${upperName} } from './services/${folder.join('/')}/${fileName}'
`;
const paramsTemplate = ({ entity, upperName }) => /* ts */ `// Add the ${entity} as an optional property to all params
declare module '@feathersjs/feathers' {
  interface Params {
    ${entity}?: ${upperName}
  }
}
`;
const toDeclarationFile = toFile(({ lib }) => lib, 'declarations.ts');
export const generate = (ctx) => Promise.resolve(ctx)
    .then(when((ctx) => ctx.language === 'ts', inject(importTemplate, before(/export \{ NextFunction \}|export type \{ NextFunction \}/), toDeclarationFile)))
    .then(when((ctx) => ctx.language === 'ts', inject(paramsTemplate, append(), toDeclarationFile)));
//# sourceMappingURL=declarations.tpl.js.map