import { FeathersBaseContext, FeathersAppInfo } from '../commons.js';
export interface AppGeneratorData extends FeathersAppInfo {
    /**
     * The application name
     */
    name: string;
    /**
     * A short description of the app
     */
    description: string;
    /**
     * The database connection string
     */
    connectionString: string;
    /**
     * The source folder where files are put
     */
    lib: string;
    /**
     * Generate a client
     */
    client: boolean;
}
export type AppGeneratorContext = FeathersBaseContext & AppGeneratorData & {
    dependencies: string[];
    devDependencies: string[];
};
export type AppGeneratorArguments = FeathersBaseContext & Partial<AppGeneratorData>;
export declare const generate: (ctx: AppGeneratorArguments) => Promise<{
    dependencies: string[];
    devDependencies: any[];
    feathers: FeathersAppInfo;
    pkg: import("../commons.js").AppPackageJson & import("@featherscloud/pinion").JSONData;
    lib: string;
    test: string;
    language: "ts" | "js";
    dependencyVersions: import("../commons.js").DependencyVersions & {
        '@feathersjs/cli': any;
    } & {
        '@feathersjs/cli': any;
    };
    cwd: string;
    argv: string[];
    pinion: import("@featherscloud/pinion").Configuration;
    name?: string;
    description?: string;
    connectionString?: string;
    client?: boolean;
    database?: "mongodb" | "mysql" | "postgresql" | "sqlite" | "mssql" | "other";
    packager?: "yarn" | "npm" | "pnpm";
    transports?: ("rest" | "websockets")[];
    framework?: "koa" | "express";
    schema?: false | "typebox" | "json";
}>;
